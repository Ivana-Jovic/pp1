//program MJProgram
	//const int a3= 5, b=7, c=8;
//	int aa[], bb,cc[];
//	class kl {int aa[], bb,cc[];}
//{
//}

program p
const int size = false;
int a;
class Table extends A{
int pos[], neg[];

{
	void putp (int a, int idx) 
	int i;
	{
	thiss[i]= true; 
	 }
void putp (int a, int idx) {
	thiss[idx].p = a; 
	thisg.bla[idx] = a; 
	return;
	 }
}
}
{}




/////////////////////////////
program p
const int size = 10;
class Table {
int pos[], neg[];
{
 void putp (int a, int idx) { thiss.pos[idx] = a; }
 void putn (int a, int idx) { thiss.neg[idx] = a; }
 int getp (int idx) { return pos[idx]; }
 int getn (int idx) { return neg[idx]; }
}
}
record Board {
int rows, columns;
}
Table val;
Board board;
{
void f(char ch, int a, int arg)
int x;
{
x = arg;
}
void main() int x, i; char c;
{




val = new Table;
val.pos = new int [size];
val.neg = new int [size];
read(x);
if(x > 5)
{
goto skip;
}
i = 0;
do{
val.putp(0, i);
 val.putn(0, i);
 i++;
}while(i<size);
skip: f(c, x, i);
board = new Board;
read(board.rows);
x = board.rows;
do{
 if(x <= 0) break;
 if (0 <= x && x < size)
{
val.putp(val.getp(x)+1);
}
else if (-size < x && x < 0)
 {
val.putn(val.getn(-x)+1);
 }
read(x);
 }while(true);
}
}
///////////////////////////////
program Program
class A{int x[],y[];}
const int pi = 3, e = 2;
class B extends A {
 int i;
 {
int getValue(int a) int b; bool c;{
 return thiss.i + thiss.x[0] + a; }
void m(){}
 }
}
class C extends B{A theA;int a;}
{
void main() A a; C c; int i; int x[]; char ch; {
a = new A;
a.x = new int[5]; a.y = new int[5];
c = new C;
c.theA = a; c.x = new int[5];
x = new int[3];
read(c.i);
i = 0;
do{
read(c.x[i]); read(c.theA.x[i]);
i++;
}while(i<5);
print(c.getValue(c.theA.x[0]));
c.m();
}
}